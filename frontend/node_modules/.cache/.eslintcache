[{"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\index.js":"1","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\App.js":"2","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.js":"3","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.js":"4","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js":"6","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.js":"7","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.js":"8","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithConfirm.js":"9","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.js":"10","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.js":"11","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.js":"12","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.js":"13","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.js":"14","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\ApiAuth.js":"15","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js":"16","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\contexts\\CurrentUserContext.js":"17","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.js":"18","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.js":"19","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\constants.js":"20"},{"size":317,"mtime":1690114446000,"results":"21","hashOfConfig":"22"},{"size":7700,"mtime":1690218213439,"results":"23","hashOfConfig":"22"},{"size":1294,"mtime":1690114446000,"results":"24","hashOfConfig":"22"},{"size":1519,"mtime":1690216094000,"results":"25","hashOfConfig":"22"},{"size":201,"mtime":1690114446000,"results":"26","hashOfConfig":"22"},{"size":209,"mtime":1690114446000,"results":"27","hashOfConfig":"22"},{"size":1629,"mtime":1690114446000,"results":"28","hashOfConfig":"22"},{"size":683,"mtime":1690114446000,"results":"29","hashOfConfig":"22"},{"size":459,"mtime":1690114446000,"results":"30","hashOfConfig":"22"},{"size":2291,"mtime":1690114446000,"results":"31","hashOfConfig":"22"},{"size":1200,"mtime":1690114446000,"results":"32","hashOfConfig":"22"},{"size":686,"mtime":1690114446000,"results":"33","hashOfConfig":"22"},{"size":2105,"mtime":1690114446000,"results":"34","hashOfConfig":"22"},{"size":1183,"mtime":1690114446000,"results":"35","hashOfConfig":"22"},{"size":962,"mtime":1690393959328,"results":"36","hashOfConfig":"22"},{"size":2418,"mtime":1690394157652,"results":"37","hashOfConfig":"22"},{"size":90,"mtime":1690114446000,"results":"38","hashOfConfig":"22"},{"size":1611,"mtime":1690215990000,"results":"39","hashOfConfig":"22"},{"size":715,"mtime":1690114446000,"results":"40","hashOfConfig":"22"},{"size":199,"mtime":1690394057451,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jppcx0",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\index.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\App.js",["106"],[],"import { useState, useEffect } from \"react\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Register from \"./Register.js\";\nimport Login from \"./Login.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\n\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithConfirm from \"./PopupWithConfirm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/Api.js\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { apiAuth } from \"../utils/ApiAuth.js\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [deletedCard, setDeletedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const [isAuth, setIsAuth] = useState(false);\n\n  const [tooltipMessage, setTooltipMessage] = useState(\"\");\n  const [isTooltipOpen, setIsTooltipOpen] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const [hasToken, setHasToken] = useState(\n    Boolean(localStorage.getItem(\"jwt\"))\n  );\n  const [userData, setUserData] = useState({});\n\n  const navigate = useNavigate();\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmCardDelete(cardId) {\n    setDeletedCard(cardId);\n    setIsConfirmPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard({});\n    setIsTooltipOpen(false);\n  }\n\n  function handleCardLike(card, isLiked) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .toggleLike(card._id, isLiked ? \"DELETE\" : \"PUT\")\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard.data : c))\n        );\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  }\n\n  function handleCardDelete(cardId) {\n    api\n      .deleteCard(cardId)\n      .then(() => {\n        setCards(cards.filter((card) => card._id !== cardId));\n        closeAllPopups();\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  }\n\n  function handleUpdateUser(data) {\n    api\n      .saveUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res.data);\n        closeAllPopups();\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .saveUserAvatar(data)\n      .then((res) => {\n        setCurrentUser(res.data);\n        closeAllPopups();\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([...cards, newCard.data]);\n        closeAllPopups();\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  }\n\n  function handleRegister(data) {\n    apiAuth\n      .register(data)\n      .then(() => {\n        setIsSuccess(true);\n        setIsTooltipOpen(true);\n        setTooltipMessage(\"Вы успешно зарегистрировались!\");\n        navigate(\"/sign-in\");\n      })\n      .catch((error) => {\n        setIsTooltipOpen(true);\n        setIsSuccess(false);\n        setTooltipMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        console.log(`Ошибка: ${error}`);\n      });\n  }\n\n  function handleLogin(data) {\n    apiAuth\n      .login(data)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token);\n        setHasToken(true);\n        setIsAuth(true);\n        setIsSuccess(true);\n      })\n      .catch((error) => {\n        setIsTooltipOpen(true);\n        setIsSuccess(false);\n        setTooltipMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        console.log(`Ошибка: ${error}`);\n      });\n  }\n\n  function handleLogout() {\n    localStorage.removeItem(\"jwt\");\n    setIsAuth(false);\n    setHasToken(false);\n    setUserData({});\n  }\n  useEffect(() => {\n    if (isAuth) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()])\n        .then(([userData, cards]) => {\n          setCurrentUser(userData.data);\n          setCards(cards.data);\n        })\n        .catch((error) => console.log(`Ошибка: ${error}`));\n    }\n  }, [isAuth]);\n\n  useEffect(() => {\n    if (hasToken) {\n      apiAuth\n        .checkAuth()\n        .then((res) => {\n          setUserData(res.data);\n          setIsAuth(true);\n          navigate(\"/\");\n        })\n        .catch((error) => console.log(`Ошибка: ${error}`));\n    }\n  }, [hasToken]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header userData={userData} isAuth={isAuth} onLogout={handleLogout} />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                isAuth={isAuth}\n                element={\n                  <Main\n                    onCardClick={handleCardClick}\n                    onEditProfile={handleEditProfileClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onAddPlace={handleAddPlaceClick}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleConfirmCardDelete}\n                  />\n                }\n              />\n            }\n          />\n          <Route\n            path=\"/sign-up\"\n            element={<Register onRegister={handleRegister} />}\n          />\n          <Route path=\"/sign-in\" element={<Login onLogin={handleLogin} />} />\n          <Route\n            path=\"/*\"\n            element={<Navigate to={isAuth ? \"/\" : \"/sign-in\"} />}\n          />\n        </Routes>\n\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <PopupWithConfirm\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onConfirm={handleCardDelete}\n          deletedCard={deletedCard}\n        />\n\n        <ImagePopup\n          isOpen={Object.keys(selectedCard).length}\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n        <InfoTooltip\n          isOpen={isTooltipOpen}\n          onClose={closeAllPopups}\n          isSuccess={isSuccess}\n          text={tooltipMessage}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithConfirm.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.js",["107"],[],"import headerLogo from \"../images/logo.svg\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Header({ userData, isAuth, onLogout }) {\n  const [linkPath, setLinkPath] = useState(\"\");\n  const [linkText, setLinkText] = useState(\"\");\n\n  const location = useLocation();\n\n  useEffect(() => {\n    switch (location.pathname) {\n      case \"/sign-in\":\n        setLinkPath(\"/sign-up\");\n        setLinkText(\"Регистрация\");\n        break;\n      case \"/sign-up\":\n        setLinkPath(\"/sign-in\");\n        setLinkText(\"Войти\");\n        break;\n    }\n  }, [location.pathname]);\n\n  return (\n    <header className=\"header\">\n      <img alt=\"Логотип место\" src={headerLogo} className=\"header__logo\" />\n      {!isAuth && (\n        <Link className=\"header__navigation-link\" to={linkPath}>\n          {linkText}\n        </Link>\n      )}\n\n      {isAuth && (\n        <div className=\"header__user-info\">\n          <p className=\"header__email\">{userData.email}</p>\n          <button className=\"header__logout opacity\" onClick={onLogout}>\n            Выйти\n          </button>\n        </div>\n      )}\n    </header>\n  );\n}\n","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\ApiAuth.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.js",["108"],[],"import { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { useContext, useState } from \"react\";\n\n// export default function\nconst Card = ({ card, onCardClick, onCardLike, onCardDelete }) => {\n  const userId = useContext(CurrentUserContext)._id;\n  const isOwn = card.owner._id === userId; // Определяем, являемся ли мы владельцем текущей карточки\n  const isLiked = card.likes.some((card) => card === userId);\n\n  const handleCardClick = () => {\n    onCardClick(card);\n   };\n\n   const handleCardLike = () => {\n    onCardLike(card, isLiked);\n   };\nconst handleCardDelete = () => {\n  onCardDelete(card._id);\n}\n\n  return (\n    <article className=\"card\">\n      <img\n        className=\"card__image\"\n        alt={card.name}\n        src={card.link}\n        onClick={handleCardClick}\n      />\n      {/* // Далее в разметке используем переменную для условного рендеринга */}\n      {isOwn && (\n        <button onClick={handleCardDelete}\n        className=\"card__delete-button opacity\" type=\"button\" />\n      )}\n      <div className=\"card__description\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like\">\n          <button\n            onClick={handleCardLike}\n            type=\"button\"\n            className={`card__like-button ${\n              isLiked ? \"card__like-button_active\" : \"\"\n            }`}\n          />\n\n          <span className=\"card__like-count\">{card.likes.length}</span>\n        </div>\n      </div>\n    </article>\n  );\n};\nexport default Card;\n","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.js",["109"],[],"import {useEffect} from 'react';\n\nexport default function PopupWithForm({\n  name,\n  title,\n  buttonText,\n  children,\n  isOpen,\n  onClose,\n  onSubmit\n}) {\n  return (\n    <div className={`popup popup_${name}  ${isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <h2 className=\"popup__title\">{title}</h2>\n\n        <form className=\"popup__form\" name={name} onSubmit={onSubmit}>\n          {children}\n          <button type=\"submit\" className=\"popup__button-save opacity\">\n            {buttonText}\n          </button>\n        </form>\n        <button\n          type=\"button\"\n          className=\"popup__button-close opacity\"\n          onClick={onClose}\n        />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Legion Pro\\OneDrive\\Рабочий стол\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\constants.js",[],[],{"ruleId":"110","severity":1,"message":"111","line":187,"column":6,"nodeType":"112","endLine":187,"endColumn":16,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":12,"column":5,"nodeType":"116","messageId":"117","endLine":21,"endColumn":6},{"ruleId":"118","severity":1,"message":"119","line":2,"column":22,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"122","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["123"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",{"desc":"124","fix":"125"},"Update the dependencies array to be: [hasToken, navigate]",{"range":"126","text":"127"},[5287,5297],"[hasToken, navigate]"]